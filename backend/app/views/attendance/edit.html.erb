<% content_for :title, 'Edit Attendance' %>



<div class="flex items-center justify-between mb-6">
  <h2 class="text-2xl font-bold text-gray-900">出欠情報の更新</h2>
  <%= link_to "出席管理に戻る", attendance_path, class: "bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded transition duration-200" %>
</div>

<%= form_with(url: update_attendance_edit_path, method: :patch, class: "space-y-6") do |f| %>
  <!-- イベント一覧 -->
  <div class="bg-white rounded-lg shadow p-6">
    <h3 class="text-xl font-semibold mb-4">イベント一覧（受付中・受付終了）</h3>
    <% if @events.any? %>
      <div class="space-y-3">
        <% @events.each do |event| %>
          <div class="flex items-center gap-4 py-3 px-4 border border-gray-200 rounded-lg bg-gray-50" data-event-id="<%= event.id %>">
            <!-- 編集/保存ボタン -->
            <div class="flex-shrink-0">
              <button type="button" class="edit-btn bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm transition-colors duration-200" data-event-id="<%= event.id %>">
                編集
              </button>
              <!-- 保存ボタン（編集中のみ表示） -->
              <button type="button" class="save-btn hidden bg-blue-600 hover:bg-blue-700 text-white px-3 py-1 rounded text-sm transition-colors duration-200" data-event-id="<%= event.id %>">
                保存
              </button>
            </div>

            <!-- 日付・イベント名・場所・受付ステータス -->
            <div class="w-64 flex-shrink-0">
              <div class="text-sm font-medium"><%= event.date.strftime("%m月%d日") %>(<%= japanese_weekday(event.date) %>)</div>
              <div class="text-sm text-gray-600"><%= event.title %></div>
              <% if event.place.present? %>
                <div class="text-xs text-gray-500">@<%= event.place %></div>
              <% end %>
              <div class="text-xs">
                <% if event.attendance_status == "open" %>
                  <span class="text-green-600 font-medium">受付中</span>
                <% elsif event.attendance_status == "closed" %>
                  <span class="text-red-600 font-medium">受付終了</span>
                <% end %>
              </div>
            </div>

            <!-- 出席ステータス -->
            <% user_attendance = @user_attendance[event.id] %>
            <div class="flex items-center gap-6 form-controls" data-event-id="<%= event.id %>">
              <div class="flex items-center gap-1">
                <%= f.radio_button "attendance[#{event.id}][status]", "present", checked: user_attendance&.status == "present", class: "form-radio", data: { requires_note: false }, disabled: true %>
                <%= f.label "attendance[#{event.id}][status]", "出席", value: "present", class: "text-sm cursor-pointer" %>
              </div>

              <div class="flex items-center gap-1">
                <%= f.radio_button "attendance[#{event.id}][status]", "absent", checked: user_attendance&.status == "absent", class: "form-radio", data: { requires_note: true }, disabled: true %>
                <%= f.label "attendance[#{event.id}][status]", "欠席", value: "absent", class: "text-sm cursor-pointer" %>
              </div>

              <div class="flex items-center gap-1">
                <%= f.radio_button "attendance[#{event.id}][status]", "other", checked: user_attendance&.status == "other", class: "form-radio", data: { requires_note: true }, disabled: true %>
                <%= f.label "attendance[#{event.id}][status]", "その他", value: "other", class: "text-sm cursor-pointer" %>
              </div>
            </div>

            <!-- 備考欄 -->
            <div class="flex-1">
              <%= f.text_area "attendance[#{event.id}][note]", 
                  value: user_attendance&.note,
                  class: "w-full text-sm rounded border border-gray-200 px-2 py-1 h-auto resize-none", 
                  rows: 1, 
                  required: false, 
                  placeholder: "欠席・その他の場合は必ず理由を入力",
                  disabled: true %>
            </div>

            <!-- 回答状況表示 -->
            <div class="flex-shrink-0">
              <% if user_attendance && user_attendance.status.present? %>
                <span class="inline-block px-2 py-1 text-xs font-semibold rounded-full bg-green-100 text-green-800">
                  回答済み
                </span>
              <% else %>
                <span class="inline-block px-2 py-1 text-xs font-semibold rounded-full bg-red-100 text-red-800">
                  未回答
                </span>
              <% end %>
            </div>
          </div>
        <% end %>
      </div>
    <% else %>
      <p class="text-gray-600">イベントはありません。</p>
    <% end %>
  </div>

  <!-- 戻るボタン -->
  <div class="flex justify-center">
    <%= link_to "出席管理に戻る", attendance_path, class: "bg-gray-500 hover:bg-gray-600 text-white font-bold py-3 px-6 rounded transition duration-200" %>
  </div>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // 編集ボタンのクリックイベント
  const editButtons = document.querySelectorAll('.edit-btn');
  
  editButtons.forEach(button => {
    button.addEventListener('click', function() {
      const eventId = this.dataset.eventId;
      const eventDiv = document.querySelector(`[data-event-id="${eventId}"]`);
      const formControls = eventDiv.querySelector(`.form-controls[data-event-id="${eventId}"]`);
      const radioButtons = formControls.querySelectorAll('input[type="radio"]');
      const textArea = eventDiv.querySelector('textarea');
      const saveBtn = eventDiv.querySelector(`.save-btn[data-event-id="${eventId}"]`);
      
      // 編集開始：フォームを有効化
      radioButtons.forEach(radio => radio.disabled = false);
      textArea.disabled = false;
      
      // ボタンの表示切り替え
      this.style.display = 'none';
      saveBtn.classList.remove('hidden');
      
      // divの背景色を編集中色に変更
      eventDiv.classList.remove('bg-gray-50');
      eventDiv.classList.add('bg-green-100', 'border-green-300');
    });
  });

  // 保存ボタンのクリックイベント
  const saveButtons = document.querySelectorAll('.save-btn');
  
  saveButtons.forEach(button => {
    button.addEventListener('click', function() {
      const eventId = this.dataset.eventId;
      const eventDiv = document.querySelector(`[data-event-id="${eventId}"]`);
      const formControls = eventDiv.querySelector(`.form-controls[data-event-id="${eventId}"]`);
      const radioButtons = formControls.querySelectorAll('input[type="radio"]');
      const textArea = eventDiv.querySelector('textarea');
      const editBtn = eventDiv.querySelector(`.edit-btn[data-event-id="${eventId}"]`);
      
      // 選択された出席状況と備考を取得
      const selectedRadio = formControls.querySelector('input[type="radio"]:checked');
      const noteValue = textArea.value;
      
      if (!selectedRadio) {
        alert('出席状況を選択してください。');
        return;
      }
      
      if ((selectedRadio.value === 'absent' || selectedRadio.value === 'other') && !noteValue.trim()) {
        alert('欠席・その他の場合は備考を入力してください。');
        return;
      }
      
      // 保存ボタンを無効化（重複送信防止）
      this.disabled = true;
      this.textContent = '保存中...';
      
      // AJAXでサーバーに送信
      fetch('/attendance/save_individual', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
        },
        body: JSON.stringify({
          event_id: eventId,
          status: selectedRadio.value,
          note: noteValue
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          // 成功：ページをリロード
          window.location.reload();
        } else {
          alert('保存に失敗しました: ' + (data.message || '不明なエラー'));
          // エラーの場合のみボタンを再度有効化
          this.disabled = false;
          this.textContent = '保存';
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('保存に失敗しました。');
        // エラーの場合のみボタンを再度有効化
        this.disabled = false;
        this.textContent = '保存';
      });
    });
  });

  // ラジオボタンの変更イベント（備考欄の必須チェック）
  const radioButtons = document.querySelectorAll('input[type="radio"]');

  radioButtons.forEach(radio => {
    radio.addEventListener('change', function() {
      const requiresNote = this.dataset.requiresNote === 'true';
      const eventDiv = this.closest('[data-event-id]');
      const textArea = eventDiv.querySelector('textarea');
      if (textArea) {
        textArea.required = requiresNote;
      }
    });
  });
});
</script> 