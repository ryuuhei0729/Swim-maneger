<% content_for :title, '出欠受付管理' %>

<div class="w-full pt-8">
  <div class="text-center mb-8">
    <h1 class="text-4xl font-bold text-gray-900 mb-3">出欠受付管理</h1>
    <p class="text-lg text-gray-600">イベントの出欠受付状況を管理できます</p>
  </div>

  <% if flash[:notice] %>
    <div class="mb-6 bg-green-50 p-4 rounded-lg">
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <p class="text-sm font-medium text-green-800"><%= flash[:notice] %></p>
        </div>
      </div>
    </div>
  <% end %>

  <% if flash[:alert] %>
    <div class="mb-6 bg-red-50 p-4 rounded-lg">
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <p class="text-sm font-medium text-red-800"><%= flash[:alert] %></p>
        </div>
      </div>
    </div>
  <% end %>

    <!-- イベントの出欠受付管理 -->
    <div class="bg-white rounded-xl shadow-sm border border-gray-100 mb-8">
      <div class="p-6 border-b border-gray-200">
        <h2 class="text-xl font-semibold text-gray-900 mb-4">イベントの出欠受付管理</h2>
        <p class="text-sm text-gray-600 mb-4">練習、イベント、大会の出欠受付状況を設定できます</p>
        
        <!-- フィルタリング機能 -->
        <div class="bg-gray-50 p-4 rounded-lg mb-4">
          <h3 class="text-sm font-medium text-gray-700 mb-3">フィルタリング</h3>
          <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <!-- イベントタイプフィルター -->
            <div>
              <label for="event-type-filter" class="block text-xs font-medium text-gray-600 mb-1">イベントタイプ</label>
              <select id="event-type-filter" class="w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="">全て</option>
                <option value="attendance_event">練習・ミーティング</option>
                <option value="competition">大会</option>
              </select>
            </div>
            
            <!-- 年フィルター -->
            <div>
              <label for="year-filter" class="block text-xs font-medium text-gray-600 mb-1">年</label>
              <select id="year-filter" class="w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="">全て</option>
                <% (Date.current.year - 2..Date.current.year + 1).each do |year| %>
                  <option value="<%= year %>" <%= 'selected' if year == Date.current.year %>><%= year %>年</option>
                <% end %>
              </select>
            </div>
            
            <!-- 月フィルター -->
            <div>
              <label for="month-filter" class="block text-xs font-medium text-gray-600 mb-1">月</label>
              <select id="month-filter" class="w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="">全て</option>
                <% (1..12).each do |month| %>
                  <option value="<%= month %>"><%= month %>月</option>
                <% end %>
              </select>
            </div>
            
            <!-- 出欠受付状況フィルター -->
            <div>
              <label for="status-filter" class="block text-xs font-medium text-gray-600 mb-1">出欠受付状況</label>
              <select id="status-filter" class="w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                <option value="">全て</option>
                <option value="before">出欠集計前</option>
                <option value="open">受付中</option>
                <option value="closed">受付終了</option>
              </select>
            </div>
          </div>
          
          <!-- フィルターリセットボタン -->
          <div class="mt-3">
            <button type="button" id="reset-filters-btn" class="text-sm text-gray-600 hover:text-gray-800 underline">
              フィルターをリセット
            </button>
          </div>
        </div>

        <!-- 一括変更機能 -->
        <div class="flex items-center space-x-4 mb-4">
          <div class="flex items-center space-x-2">
            <label for="bulk-status" class="text-sm font-medium text-gray-700">選択したイベントを一括で:</label>
            <select id="bulk-status" class="border border-gray-300 rounded-md px-3 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
              <option value="">変更先を選択</option>
              <option value="before">出欠集計前</option>
              <option value="open">受付中</option>
              <option value="closed">受付終了</option>
            </select>
            <button type="button" id="bulk-update-btn" class="bg-blue-600 text-white px-3 py-1 rounded-md text-sm font-medium hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed" disabled>
              一括変更
            </button>
          </div>
        </div>
      </div>
      
      <div class="p-6">
        <% if @attendance_events.any? || @competitions.any? %>
          <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
              <thead class="bg-gray-50">
                <tr>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider w-12">
                    <input type="checkbox" id="select-all-header" class="rounded border-gray-300 text-blue-600 focus:ring-blue-500">
                  </th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">日付</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">タイトル</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">大会</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">場所</th>
                  <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">出欠受付状況</th>
                </tr>
              </thead>
              <tbody class="bg-white divide-y divide-gray-200">
                <% (@attendance_events + @competitions).sort_by(&:date).reverse.each do |event| %>
                  <tr class="event-row hover:bg-gray-50" 
                      data-event-type="<%= event.is_a?(Competition) ? 'competition' : 'attendance_event' %>"
                      data-event-month="<%= event.date.month %>"
                      data-event-year="<%= event.date.year %>"
                      data-event-status="<%= event.attendance_status %>">
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      <input type="checkbox" 
                             class="event-checkbox rounded border-gray-300 text-blue-600 focus:ring-blue-500" 
                             data-event-id="<%= event.id %>" 
                             data-event-type="<%= event.is_a?(Competition) ? 'competition' : 'attendance_event' %>">
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      <%= event.date.strftime('%m/%d') %>
                      <span class="text-gray-500">(<%= %w[日 月 火 水 木 金 土][event.date.wday] %>)</span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= event.title %></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      <% if event.is_a?(Competition) %>
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                          大会
                        </span>
                      <% end %>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900"><%= event.place %></td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      <% case event.attendance_status %>
                      <% when 'before' %>
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                          出欠集計前
                        </span>
                      <% when 'open' %>
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800">
                          受付中
                        </span>
                      <% when 'closed' %>
                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800">
                          受付終了
                        </span>
                      <% end %>
                    </td>
                  </tr>
                <% end %>
              </tbody>
            </table>
          </div>
        <% else %>
          <div class="text-center py-8">
            <p class="text-gray-500">イベントが登録されていません</p>
          </div>
        <% end %>
      </div>
    </div>

    <!-- 操作ボタン -->
    <div class="flex justify-center space-x-4 mb-8">
      <%= link_to "出欠管理に戻る", admin_attendance_path, class: "bg-gray-600 text-white px-6 py-3 rounded-md text-sm font-medium hover:bg-gray-700 transition-colors" %>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const selectAllHeaderCheckbox = document.getElementById('select-all-header');
  const eventCheckboxes = document.querySelectorAll('.event-checkbox');
  const bulkStatusSelect = document.getElementById('bulk-status');
  const bulkUpdateBtn = document.getElementById('bulk-update-btn');
  const form = document.querySelector('form');

  // フィルタリング要素
  const eventTypeFilter = document.getElementById('event-type-filter');
  const monthFilter = document.getElementById('month-filter');
  const yearFilter = document.getElementById('year-filter');
  const statusFilter = document.getElementById('status-filter');
  const resetFiltersBtn = document.getElementById('reset-filters-btn');
  const eventRows = document.querySelectorAll('.event-row');

  // フィルタリング関数
  function applyFilters() {
    const selectedEventType = eventTypeFilter.value;
    const selectedMonth = monthFilter.value;
    const selectedYear = yearFilter.value;
    const selectedStatus = statusFilter.value;

    eventRows.forEach(row => {
      let shouldShow = true;

      // イベントタイプフィルター
      if (selectedEventType && row.dataset.eventType !== selectedEventType) {
        shouldShow = false;
      }

      // 月フィルター
      if (selectedMonth && row.dataset.eventMonth !== selectedMonth) {
        shouldShow = false;
      }

      // 年フィルター
      if (selectedYear && row.dataset.eventYear !== selectedYear) {
        shouldShow = false;
      }

      // 出欠受付状況フィルター
      if (selectedStatus && row.dataset.eventStatus !== selectedStatus) {
        shouldShow = false;
      }

      // 行の表示/非表示を切り替え
      row.style.display = shouldShow ? '' : 'none';
    });

    // フィルタリング後にチェックボックスの状態を更新
    updateSelectAll();
  }

  // 全て選択チェックボックスの処理（フィルタリングを考慮）
  function updateSelectAll() {
    const visibleCheckboxes = Array.from(document.querySelectorAll('.event-checkbox')).filter(checkbox => {
      const row = checkbox.closest('.event-row');
      return row && row.style.display !== 'none';
    });
    const checkedCount = visibleCheckboxes.filter(checkbox => checkbox.checked).length;
    const totalCount = visibleCheckboxes.length;
    
    selectAllHeaderCheckbox.checked = checkedCount === totalCount && totalCount > 0;
    
    // 一括変更ボタンの有効/無効を切り替え
    bulkUpdateBtn.disabled = checkedCount === 0 || !bulkStatusSelect.value;
  }

  // 個別チェックボックスの処理
  eventCheckboxes.forEach(checkbox => {
    checkbox.addEventListener('change', updateSelectAll);
  });

  // ヘッダーの全て選択チェックボックスの処理（フィルタリングを考慮）
  selectAllHeaderCheckbox.addEventListener('change', function() {
    const visibleCheckboxes = Array.from(document.querySelectorAll('.event-checkbox')).filter(checkbox => {
      const row = checkbox.closest('.event-row');
      return row && row.style.display !== 'none';
    });
    visibleCheckboxes.forEach(checkbox => {
      checkbox.checked = this.checked;
    });
    updateSelectAll();
  });

  // フィルター変更時の処理
  eventTypeFilter.addEventListener('change', applyFilters);
  monthFilter.addEventListener('change', applyFilters);
  yearFilter.addEventListener('change', applyFilters);
  statusFilter.addEventListener('change', applyFilters);

  // フィルターリセットボタンの処理
  resetFiltersBtn.addEventListener('click', function() {
    eventTypeFilter.value = '';
    monthFilter.value = '';
    yearFilter.value = '';
    statusFilter.value = '';
    applyFilters();
  });

  // 一括変更の選択肢変更時の処理
  bulkStatusSelect.addEventListener('change', function() {
    const checkedCount = Array.from(document.querySelectorAll('.event-checkbox:checked')).filter(checkbox => {
      const row = checkbox.closest('.event-row');
      return row && row.style.display !== 'none';
    }).length;
    bulkUpdateBtn.disabled = checkedCount === 0 || !this.value;
  });

  // 一括変更ボタンの処理
  bulkUpdateBtn.addEventListener('click', function() {
    const selectedStatus = bulkStatusSelect.value;
    // 表示されているチェックボックスのみを取得
    const checkedCheckboxes = Array.from(document.querySelectorAll('.event-checkbox:checked')).filter(checkbox => {
      const row = checkbox.closest('.event-row');
      return row && row.style.display !== 'none';
    });
    
    if (checkedCheckboxes.length === 0 || !selectedStatus) {
      alert('変更するイベントと変更先を選択してください。');
      return;
    }

    // ボタンを無効化（重複送信防止）
    this.disabled = true;
    this.textContent = '更新中...';

    // 選択されたイベントのデータを準備
    const updateData = {
      attendance_events: {},
      competitions: {}
    };

    checkedCheckboxes.forEach(checkbox => {
      const eventId = checkbox.dataset.eventId;
      const eventType = checkbox.dataset.eventType;
      
      if (eventType === 'competition') {
        updateData.competitions[eventId] = selectedStatus;
      } else {
        updateData.attendance_events[eventId] = selectedStatus;
      }
    });

    // AJAXでサーバーに送信
    fetch('<%= update_admin_attendance_status_path %>', {
      method: 'PATCH',
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json',
        'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]')?.getAttribute('content') || document.querySelector('input[name="authenticity_token"]')?.value || ''
      },
      body: JSON.stringify(updateData)
    })
    .then(response => response.json())
    .then(data => {
      if (data.success) {
        // 成功：ページをリロード
        window.location.reload();
      } else {
        alert('更新に失敗しました: ' + (data.message || '不明なエラー'));
        // エラーの場合のみボタンを再度有効化
        this.disabled = false;
        this.textContent = '一括変更';
      }
    })
    .catch(error => {
      console.error('Fetch error:', error);
      alert('更新に失敗しました。');
      // エラーの場合のみボタンを再度有効化
      this.disabled = false;
      this.textContent = '一括変更';
    });
  });

  // 初期状態の設定
  updateSelectAll();
});
</script> 