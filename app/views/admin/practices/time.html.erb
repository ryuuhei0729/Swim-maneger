<% content_for :title, 'Admin' %>

<div class="w-full pt-8" data-controller="practice-time">
  <div class="text-center mb-12">
    <h1 class="text-4xl font-bold text-gray-900 mb-3">練習タイム入力</h1>
    <p class="text-lg text-gray-600">練習メニューとタイムを一度に入力します</p>
  </div>

  <div class="bg-white rounded-xl shadow-lg overflow-hidden">
    <div class="p-6">
      <%= form_with(model: @practice_log, url: admin_practice_time_path, method: :get, id: 'practice-log-form', data: { turbo: false }) do |f| %>
        
        <div class="space-y-6">
          <!-- 練習選択 -->
          <div>
            <%= f.label :attendance_event_id, "練習を選択", class: "block text-sm font-medium text-gray-700" %>
            <%= f.select :attendance_event_id, options_from_collection_for_select(@attendance_events, :id, ->(e) { "#{e.date.strftime('%Y/%m/%d')} #{e.title}" }, params.dig(:practice_log, :attendance_event_id) || @default_event&.id), {}, { class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 py-3 px-3" } %>
          </div>

          <!-- PracticeLog Fields -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <%= f.label :style, class: "block text-sm font-medium text-gray-700" %>
              <%= f.select :style, @styles.invert, { include_blank: '種目を選択してください' }, { class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 py-3 px-3" } %>
            </div>
            <div>
              <%= f.label :distance, "距離 (m)", class: "block text-sm font-medium text-gray-700" %>
              <%= f.number_field :distance, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 py-3 px-3", placeholder: "例: 100" %>
            </div>
            <div>
              <%= f.label :rep_count, "本数", class: "block text-sm font-medium text-gray-700" %>
              <%= f.number_field :rep_count, min: 1, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 py-3 px-3", placeholder: "本数を入力" %>
            </div>
            <div>
              <%= f.label :set_count, "セット数", class: "block text-sm font-medium text-gray-700" %>
              <%= f.number_field :set_count, min: 1, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 py-3 px-3", placeholder: "セット数を入力" %>
            </div>
            <div>
              <%= f.label :circle, "サークル (秒)", class: "block text-sm font-medium text-gray-700" %>
              <%= f.number_field :circle, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 py-3 px-3", placeholder: "例: 120" %>
            </div>
            <div class="md:col-span-2">
              <%= f.label :note, "メモ", class: "block text-sm font-medium text-gray-700" %>
              <%= f.text_area :note, rows: 3, class: "mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 py-3 px-3", placeholder: "練習のポイントなどを入力" %>
            </div>
          </div>

          <!-- テーブル作成ボタン -->
          <div class="flex justify-center">
            <button type="submit" id="createTableBtn"
                    class="px-6 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
              タイム入力テーブルを作成
            </button>
          </div>
        </div>

        <!-- タイム入力モーダル -->
        <div id="tableModal" class="fixed inset-0 bg-gray-500 bg-opacity-75 <%= 'hidden' unless @show_modal %> overflow-y-auto" data-practice-time-target="modal">
          <div class="flex items-center justify-center min-h-screen p-4">
            <div class="bg-white rounded-lg shadow-xl max-w-4xl w-full my-8">
              <div class="p-6">
                <div class="flex justify-between items-center mb-4 sticky top-0 bg-white z-10">
                  <h3 class="text-lg font-medium text-gray-900">タイム入力テーブル</h3>
                  <button type="button" class="text-gray-400 hover:text-gray-500" onclick="document.getElementById('tableModal').classList.add('hidden')">
                    <span class="sr-only">閉じる</span>
                    <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                  </button>
                </div>
                <div id="modalTableContent" class="overflow-y-auto">
                  <% if @show_modal %>
                    <% @sets.times do |set| %>
                      <div class="mb-8">
                        <h3 class="text-lg font-medium text-gray-900 mb-4">セット<%= set + 1 %></h3>
                        <div class="overflow-x-auto">
                          <table class="min-w-full divide-y divide-gray-200">
                            <thead class="bg-gray-50">
                              <tr class="space-x-1">
                                <th class="px-2 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">本数</th>
                                <% if @attendees.present? %>
                                  <% @attendees.each do |attendee| %>
                                    <th class="px-2 py-3 text-left text-xs font-medium text-gray-800 uppercase tracking-wider">
                                      <div class="flex items-center space-x-2">
                                        <span class="whitespace-nowrap"><%= attendee.name %></span>
                                      </div>
                                    </th>
                                  <% end %>
                                <% else %>
                                  <th class="px-2 py-3 text-left text-xs font-medium text-gray-800 uppercase tracking-wider">
                                    <div class="text-red-500">参加者情報がありません</div>
                                  </th>
                                <% end %>
                              </tr>
                            </thead>
                            <tbody class="bg-white divide-y divide-gray-200">
                              <% @laps.times do |lap| %>
                                <tr class="space-x-1">
                                  <td class="px-2 py-4 whitespace-nowrap text-sm text-gray-500"><%= lap + 1 %>本目</td>
                                  <% if @attendees.present? %>
                                    <% @attendees.each do |attendee| %>
                                      <td class="px-2 py-4 whitespace-nowrap">
                                        <input type="text" 
                                               class="block w-24 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 text-center placeholder-gray-300 py-2 px-2" 
                                               name="times[<%= attendee.id %>][<%= set + 1 %>][<%= lap + 1 %>]" 
                                               placeholder="1:23.4">
                                      </td>
                                    <% end %>
                                  <% else %>
                                    <td class="px-2 py-4 whitespace-nowrap">
                                      <div class="text-red-500">-</div>
                                    </td>
                                  <% end %>
                                </tr>
                              <% end %>
                            </tbody>
                          </table>
                        </div>
                      </div>
                    <% end %>
                  <% end %>
                </div>
                <!-- ボタン -->
                <div class="mt-6 flex justify-end space-x-4">
                  <button type="button" 
                          onclick="document.getElementById('tableModal').classList.add('hidden')"
                          class="px-4 py-2 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    閉じる
                  </button>
                  <button type="submit" id="saveTimesBtn"
                          class="px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                    タイムを保存
                  </button>
                </div>
              </div>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('practice-log-form');
  const saveButton = document.getElementById('saveTimesBtn');
  const modal = document.getElementById('tableModal');
  
  if (form && saveButton) {
    saveButton.addEventListener('click', function(e) {
      e.preventDefault(); // デフォルトのGET送信をキャンセル
      
      form.action = '<%= admin_create_practice_log_and_times_path %>';
      form.method = 'post';
      
      // CSRFトークンをフォームに追加
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');
      let tokenInput = form.querySelector('input[name="authenticity_token"]');
      if (!tokenInput) {
        tokenInput = document.createElement('input');
        tokenInput.setAttribute('type', 'hidden');
        tokenInput.setAttribute('name', 'authenticity_token');
        form.appendChild(tokenInput);
      }
      tokenInput.setAttribute('value', csrfToken);

      form.submit();
    });
  }

  if (modal) {
    modal.addEventListener('keydown', function(e) {
      // Enterキーが押され、かつ対象がタイム入力欄の場合
      if (e.key === 'Enter' && e.target.matches('input[type="text"][name^="times["]')) {
        e.preventDefault();

        const currentInput = e.target;
        const currentCell = currentInput.closest('td');
        const currentRow = currentInput.closest('tr');
        const currentSetDiv = currentRow.closest('.mb-8');
        
        const cellIndex = Array.from(currentRow.children).indexOf(currentCell);
        const nextRow = currentRow.nextElementSibling;
        
        let nextInput = null;

        // 同じセット内に次の行がある場合
        if (nextRow) {
          const nextCell = nextRow.children[cellIndex];
          if (nextCell) {
            nextInput = nextCell.querySelector('input');
          }
        } else {
          // セットの最終行の場合、次のセットを探す
          let nextSetDiv = currentSetDiv.nextElementSibling;
          while (nextSetDiv && !nextSetDiv.querySelector('table')) {
            nextSetDiv = nextSetDiv.nextElementSibling;
          }
          
          if (nextSetDiv) {
            const nextTable = nextSetDiv.querySelector('table');
            const firstRowInNextTable = nextTable.querySelector('tbody tr');
            if (firstRowInNextTable) {
              const nextCell = firstRowInNextTable.children[cellIndex];
              if (nextCell) {
                nextInput = nextCell.querySelector('input');
              }
            }
          }
        }

        if (nextInput) {
          nextInput.focus();
        } else {
          // 移動先がなければ保存ボタンにフォーカス
          saveButton.focus();
        }
      }
    });
  }
});
</script> 